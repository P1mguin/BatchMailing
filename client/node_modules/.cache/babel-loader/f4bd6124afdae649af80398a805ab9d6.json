{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pimmulder/NodeProjects/mail_unit/client/src/mailers/mail-poster/mail-poster.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport '../mail.css';\nimport './mail-poster.css';\nimport Button from 'react-bootstrap/Button';\nimport $ from 'jquery';\n\nclass MailPoster extends Component {\n  async postMail() {\n    // Get the title and content\n    let titleDiv = document.getElementById('mailTitle');\n    let subjectDiv = document.getElementById('mailSubject');\n    let contentDiv = document.getElementById('mailContent');\n    let title = titleDiv.value;\n    let subject = subjectDiv.value;\n    let content = contentDiv.value; // Get the variable names\n\n    let variables = content.match(/(?<=\\{)(.*?)(?=\\})/g).map(function (v) {\n      return v;\n    });\n    console.log(variables);\n    let uniqueVariables = [...new Set(variables)];\n    let variableString = '';\n\n    for (let i = 0; i < uniqueVariables.length; i++) {\n      if (i === uniqueVariables.length - 1) {\n        variableString += `${uniqueVariables[i]}`;\n      } else {\n        variableString += `${uniqueVariables[i]}, `;\n      }\n    }\n\n    titleDiv.value = \"\";\n    titleDiv.placeholder = `title was: ${title}`;\n    subjectDiv.value = \"\";\n    subjectDiv.placeholder = `subject was ${subject}`;\n    contentDiv.value = \"\";\n    contentDiv.placeholder = `variables were: ${variableString}`;\n    let mailTemplate = {\n      title: title,\n      subject: subject,\n      content: content,\n      variables: uniqueVariables\n    };\n    let url = `http://${/[^:]*/.exec((window.location + \"\").substr(7))}:9000/mail`;\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(mailTemplate),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mail-poster\",\n      children: [alert, /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"mailTitle\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter mail title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"mailSubject\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter mail subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"mailContent\",\n          className: \"mail-content\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            as: \"textarea\",\n            placeholder: \"Enter mail content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: [\"Variables are declared by putting them in accolades:\", ' ', '{variable}']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: () => {\n            this.postMail();\n          },\n          children: \"Post template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MailPoster;","map":{"version":3,"sources":["/home/pimmulder/NodeProjects/mail_unit/client/src/mailers/mail-poster/mail-poster.js"],"names":["React","Component","Form","Button","$","MailPoster","postMail","titleDiv","document","getElementById","subjectDiv","contentDiv","title","value","subject","content","variables","match","map","v","console","log","uniqueVariables","Set","variableString","i","length","placeholder","mailTemplate","url","exec","window","location","substr","fetch","method","body","JSON","stringify","headers","render","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport '../mail.css';\nimport './mail-poster.css';\nimport Button from 'react-bootstrap/Button';\nimport $ from 'jquery';\n\nclass MailPoster extends Component {\n    async postMail() {\n        // Get the title and content\n        let titleDiv = document.getElementById('mailTitle');\n        let subjectDiv = document.getElementById('mailSubject');\n        let contentDiv = document.getElementById('mailContent');\n        let title = titleDiv.value;\n        let subject = subjectDiv.value;\n        let content = contentDiv.value;\n\n        // Get the variable names\n        let variables = content.match(/(?<=\\{)(.*?)(?=\\})/g).map(function (v) {\n            return v;\n        });\n        console.log(variables);\n\n        let uniqueVariables = [...new Set(variables)];\n\n        let variableString = '';\n        for (let i = 0; i < uniqueVariables.length; i++) {\n            if (i === uniqueVariables.length - 1) {\n                variableString += `${uniqueVariables[i]}`;\n            } else {\n                variableString += `${uniqueVariables[i]}, `;\n            }\n        }\n\n        titleDiv.value = \"\";\n        titleDiv.placeholder = `title was: ${title}`;\n\n        subjectDiv.value = \"\";\n        subjectDiv.placeholder = `subject was ${subject}`;\n\n        contentDiv.value = \"\";\n        contentDiv.placeholder = `variables were: ${variableString}`;\n\n        let mailTemplate = {\n            title: title,\n            subject: subject,\n            content: content,\n            variables: uniqueVariables\n        }\n        let url = `http://${(/[^:]*/).exec((window.location + \"\").substr(7))}:9000/mail`;\n\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(mailTemplate),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"mail-poster\">\n                {alert}\n                <Form>\n                    <Form.Group controlId=\"mailTitle\">\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter mail title\"\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"mailSubject\">\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter mail subject\"\n                        />\n                    </Form.Group>\n                    <Form.Group\n                        controlId=\"mailContent\"\n                        className=\"mail-content\"\n                    >\n                        <Form.Control\n                            type=\"text\"\n                            as=\"textarea\"\n                            placeholder=\"Enter mail content\"\n                        />\n                        <Form.Text className=\"text-muted\">\n                            Variables are declared by putting them in accolades:{' '}\n                            {'{variable}'}\n                        </Form.Text>\n                    </Form.Group>\n                </Form>\n                <div className=\"button-wrapper\">\n                    <Button\n                        variant=\"dark\"\n                        onClick={() => {\n                            this.postMail();\n                        }}\n                    >\n                        Post template\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MailPoster;\n"]},"metadata":{},"sourceType":"module"}