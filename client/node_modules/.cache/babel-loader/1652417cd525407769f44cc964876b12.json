{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pimmulder/NodeProjects/mail_unit/client/src/mailers/mail-poster/mail-poster.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport '../mail.css';\nimport './mail-poster.css';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nclass MailPoster extends Component {\n  postMail() {\n    // Get the title and content\n    let titleDiv = document.getElementById('mailTitle');\n    let contentDiv = document.getElementById('mailContent');\n    let title = titleDiv.value;\n    let content = contentDiv.value; // Get the variable names\n\n    let variables = content.match(/(?<=\\{)(.*?)(?=\\})/g).map(function (v) {\n      return v;\n    });\n    console.log(variables);\n    let variableString = '';\n\n    for (let i = 0; i < variables.length; i++) {\n      if (i === variables.length - 1) {\n        variableString += `${variables[i]}`;\n      } else {\n        variableString += `${variables[i]}, `;\n      }\n    }\n\n    titleDiv.value = \"\";\n    titleDiv.placeholder = `title was: ${title}`;\n    contentDiv.value = \"\";\n    contentDiv.placeholder = `variables were: ${variableString}`;\n    let mailTemplate = {\n      title: title,\n      content: content,\n      variables: variables\n    };\n    console.log(mailTemplate);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mail-poster\",\n      children: [alert, /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"mailTitle\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter mail title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"mailContent\",\n          className: \"mail-content\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            as: \"textarea\",\n            placeholder: \"Enter mail content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: [\"Variables are declared by putting them in accolades:\", ' ', '{variable}']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: () => {\n            this.postMail();\n          },\n          children: \"Post template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MailPoster;","map":{"version":3,"sources":["/home/pimmulder/NodeProjects/mail_unit/client/src/mailers/mail-poster/mail-poster.js"],"names":["React","Component","Form","Button","Alert","MailPoster","postMail","titleDiv","document","getElementById","contentDiv","title","value","content","variables","match","map","v","console","log","variableString","i","length","placeholder","mailTemplate","render","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport '../mail.css';\nimport './mail-poster.css';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nclass MailPoster extends Component {\n    postMail() {\n        // Get the title and content\n        let titleDiv = document.getElementById('mailTitle');\n        let contentDiv = document.getElementById('mailContent');\n        let title = titleDiv.value;\n        let content = contentDiv.value;\n\n        // Get the variable names\n        let variables = content.match(/(?<=\\{)(.*?)(?=\\})/g).map(function (v) {\n            return v;\n        });\n        console.log(variables);\n\n        let variableString = '';\n        for (let i = 0; i < variables.length; i++) {\n            if (i === variables.length - 1) {\n                variableString += `${variables[i]}`;\n            } else {\n                variableString += `${variables[i]}, `;\n            }\n        }\n\n        titleDiv.value = \"\";\n        titleDiv.placeholder = `title was: ${title}`;\n\n        contentDiv.value = \"\";\n        contentDiv.placeholder = `variables were: ${variableString}`;\n\n        let mailTemplate = {\n            title: title,\n            content: content,\n            variables: variables\n        }\n\n        console.log(mailTemplate)\n    }\n\n    render() {\n        return (\n            <div className=\"mail-poster\">\n                {alert}\n                <Form>\n                    <Form.Group controlId=\"mailTitle\">\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter mail title\"\n                        />\n                    </Form.Group>\n                    <Form.Group\n                        controlId=\"mailContent\"\n                        className=\"mail-content\"\n                    >\n                        <Form.Control\n                            type=\"text\"\n                            as=\"textarea\"\n                            placeholder=\"Enter mail content\"\n                        />\n                        <Form.Text className=\"text-muted\">\n                            Variables are declared by putting them in accolades:{' '}\n                            {'{variable}'}\n                        </Form.Text>\n                    </Form.Group>\n                </Form>\n                <div className=\"button-wrapper\">\n                    <Button\n                        variant=\"dark\"\n                        onClick={() => {\n                            this.postMail();\n                        }}\n                    >\n                        Post template\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MailPoster;\n"]},"metadata":{},"sourceType":"module"}